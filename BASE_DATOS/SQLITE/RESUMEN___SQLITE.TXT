****************
***   0001   ***   CREAR O ABRIR UNA BASE DE DATOS
****************

--------------------------------------------------------------------------------
- EJECUTABLE PARA CREAR O ABRIR UNA BASE DE DATOS

C:\sqlite3>sqlite3.exe .\1\bd1.sqlite  

SALIDA

SQLite version 3.39.2 2022-07-21 15:24:47
Enter ".help" for usage hints.

APUNTES

* El  ejecutable  sqlite3.exe  levanta  el shell de l칤nea de comandos de sqlite3
* Luego se conecta a la base de  datos "bd1.sqlite"  ubicado  en  el  directorio
  actual .\1\
* Conectarse significa que lo abre para usarlo si este existe
* Si no existe lo crea y lo abre para usarlo
* El shell de l칤nea de comandos de sqlite3 se reconoce por el  prompt  "sqlite>"   
* Una vez que aparece el prompt "sqlite3>" podemos  escribir  los comandos punto
* El comando punto que nos permite mostrar la base de datos actualmente  en  uso
  es "sqlite> .databases"
--------------------------------------------------------------------------------
- COMANDO PUNTO PARA MOSTRAR LA BASE DE DATOS ACTUALMENTE EN USO

sqlite> .databases

SALIDA

main: C:\sqlite3\1\bd1.db r/w

APUNTES

* main: Indica que el programa principal (en este caso, sqlite3.exe) est치 siendo
  ejecutado.

* C:\sqlite3\1\bd1.db: Es la ruta completa al archivo de la base de datos bd1.db.

* r/w: Indica que la base de datos se  abrir치  en  modo de lectura/escritura. En
  otras palabras, se permite tanto leer como escribir  en la base de datos. Esto
  significa  que  puedes  realizar  operaciones  de  consulta (SELECT), as칤 como
  operaciones de modificaci칩n de datos (INSERT, UPDATE, DELETE).
--------------------------------------------------------------------------------
- COMO SABER SI TENGO SELECCIONADA UNA BASE DE DATOS

sqlite> .databases

SALIDA

main: "" r/w

APUNTES

* El "" vacio indica que no se tiene ninguna base de datos seleccionada.
* Esto  sucede  porque  ingresamos al shell de l칤nea de comandos de sqlite3  sin
  indicar ninguna base de datos es decir as칤 "C:\sqlite3.exe"
--------------------------------------------------------------------------------
- COMO INGRESAR AL SHELL DE LINEA DE COMANDOS DE SQLITE3 SIN SELECCIONAR NINGUNA
  BASE DE DATOS Y TAMPOCO CREA NINGUNA.
  
C:\sqlite3>sqlite3.exe

SALIDA

sqlite> .databases

SALIDA

main: "" r/w

APUNTES

* El "" vacio indica que no se tiene ninguna base de datos seleccionada.
--------------------------------------------------------------------------------
- COMO  ABRIR  UNA  BASE  DE  DATOS  QUE  NO  ESTA  EN LA RUTA ACTUAL C:\SQLITE3
  CON EL EJECUTABLE.

C:\sqlite3>sqlite3.exe "C:\otra_ruta\bd1.db"
--------------------------------------------------------------------------------
- COMO CREAR O ABRIR UNA BASE DE DATOS CON EL COMANDO PUNTO

(1)

sqlite> .open C:\\sqlite3\\1\\bd1.db
sqlite> .databases
main: C:\sqlite3\1\bd1.db r/w

(2)

sqlite> .open .\\1\\bd1.db   (El bd1.db existe entonces lo abre)
sqlite> .database
main: C:\sqlite3\1\bd1.db r/w

sqlite> .open .\\1\\bd1.sqlite  (El bd1.db no existe entonces lo crea)
sqlite> .databases
main: C:\sqlite3\1\bd1.sqlite r/w
--------------------------------------------------------------------------------

****************
***   0002   ***   COMANDOS PUNTO
****************

- COMANDO PUNTO PARA LIMPIAR LA PANTALLA DEL SHELL

sqlite> .system cls

- COMANDO PUNTO PARA SALIR DEL SHELL DE LINA DE COMANDOS SQLITE HACIA CMD

sqlite> .exit

- COMANDO PUNTO PARA CREAR O ABRIR UNA BASE DE DATOS

.open nombre_de_tu_base_de_datos.db
.open empresa.sqlite

- COMANDO PUNTO PARA MOSTRAR LA BASE DE DATOS ACTUALMENTE SELECCIONADA

sqlite> .databases

- COMANDO PUNTO PARA VER LA ESTRUCTURA DE UNA TABLA

sqlite> .schema Trabajador

- COMANDO PUNTO PARA MOSTRAR TODAS LAS TABLAS DE UNA BASE DE DATOS

sqlite> .tables

- COMANDO PUNTO PARA MOSTRAR LA CONFIGURACION ACTUAL

sqlite> .show

- COMANDO PUNTO PARA CAMBIAR EL FORMATO DE SALIDA

sqlite>.mode line
sqlite>.mode columna
sqlite>.mode box

sqlite>SELECT * FROM Trabajador;     (EL FORMATO DE SALIDA SE VE MOSTRANDO REGISTROS)

- COMANDO PUNTO PARA ESTABLECER LA SALIDA HACIA UN ARCHIVO

sqlite>.output nombre_del_archivo.txt
sqlite>.output salida.txt

sqlite>SELECT * FROM Trabajador;     (EL RESULTADO SE VA AL ARCHIVO SALIDA.TXT)


****************
***   0003   ***   EJECUTAR UN SCRIPT .SQL
****************

* Creamos la carpeta "hospital" dentro de la carpeta "C:\sqlite3"

C:\sqlite3>mkdir hospital ---> C:\sqlite3\hospital

* Ingresamos a la carpeta "C:\sqlite3\hospital"

* Copiamos dentro de la carpeta C:\sqlite3\hospital el script sql "bd_hospital.sql"

* Levantamos el shell de l칤nea de comandos desde la carpeta "C:\sqlite3\hospital"

C:\sqlite3\hospital>sqlite3.exe

SQLite version 3.39.2 2022-07-21 15:24:47
Enter ".help" for usage hints.
Connected to a transient in-memory database.
Use ".open FILENAME" to reopen on a persistent database.

* Creamos la base de datos 

sqlite> .open hospital.sqlite
sqlite> .databases
main: C:\sqlite3\hospital\hospital r/w

* Ejectuamos el script sql

sqlite> .read bd_hospital.sql

* Mostrar las tablas de la base de datos actual es decir la seleccionada llamada hospital.sqlite

sqlite> .tables
Consulta

* Mostrar la estructura de la tabla Consulta que se creo con el script sql "bd_hospital.sql"

sqlite> .schema Consulta

CREATE TABLE Consulta (
  numeroConsulta TEXT(10) NOT NULL,
  fecha          TEXT     NOT NULL,
  nombreMedico   TEXT(50) NOT NULL,
  deinpr         TEXT(20) NOT NULL,
  procedencia    TEXT(20) NOT NULL,
                 PRIMARY KEY (numeroConsulta)
);

****************
***   0004   ***
****************

- COMANDO SQL PARA ELIMINAR UNA TABLA

DROP TABLE nombre_de_tu_tabla;

- COMANDO SQL PARA ELIMINAR UN REGISTRO

DELETE FROM nombre_de_tu_tabla
WHERE columna_clave_primaria = valor_clave_primaria;

- COMANDO PARA ELIMINAR TODOS LOS REGISTROS

DELETE FROM nombre_de_tu_tabla;

- COMANDO SQL PARA ACTUALIZAR UN REGISTRO

UPDATE nombre_de_tu_tabla
SET columna1 = nuevo_valor1, columna2 = nuevo_valor2 
WHERE columna_clave_primaria = valor_clave_primaria;

- COMANDO SQL PARA RENOMBRAR UNA TABLA

ALTER TABLE nombre_anterior RENAME TO nombre_nuevo;

- COMANDO SQL PARA RENOMBRAR UNA COLUMNA DE UNA TABLA

ALTER TABLE clientes
RENAME COLUMN nombre_anterior TO nuevo_nombre;

- COMANDO SQL PARA VER LA ESTRUCTURA DE UNA TABLA

SELECT sql FROM sqlite_master WHERE name = 'nombre_de_tu_tabla';
SELECT sql FROM sqlite_master WHERE name = 'Trabajador';

****************
***   0005   ***
****************

--------------------------
EJEMPLO 1: EXPORTAR TO CSV
--------------------------

sqlite> .headers on
sqlite> .mode csv
sqlite> .separator ";"
sqlite> .once c:/SQLITE/parturientas/parturientas.csv
sqlite> select * from Consulta;
sqlite> .system c:/SQLITE/parturientas/parturientas.csv (Abre excel con el archivo csv)

--------------------------------------------------------------------------------
.headers on
游댳 Descripci칩n: Muestra los nombres de las columnas como la primera fila al 
   exportar o mostrar los resultados.
游댳 Ejemplo:
   Si tienes una tabla Consulta con columnas id, nombre, edad, etc., la primera 
   fila del CSV ser치: id,nombre,edad
   
.mode csv
游댳 Descripci칩n: Establece el modo de salida a CSV. Es decir, cada fila se 
   imprimir치 con los valores separados por comas (o por el separador que definas
   con .separator).
游댳 Importante: Este modo es necesario para exportar datos correctamente a un 
   archivo .csv.

.separator ";"
游댳 Descripci칩n: Cambia el separador predeterminado (que es una coma ,) por un 
   punto y coma ;.
游댳 Motivo: En muchos pa칤ses (como en Europa y Am칠rica Latina), Excel usa ; como 
   separador por defecto, especialmente si el sistema operativo est치 en espa침ol.

.once c:/SQLITE/parturientas/parturientas.csv
游댳 Descripci칩n: Le indica a SQLite que la siguiente salida del comando SQL se 
   escribir치 en el archivo indicado y no en la pantalla.
游댳 En este caso: Se guarda el resultado del SELECT en el archivo 
   parturientas.csv.

select * from Consulta;
游댳 Descripci칩n: Consulta todos los registros de la tabla Consulta.
游댳 Resultado: Debido a .once, esta salida se guarda en el archivo CSV indicado,
   y no se muestra en pantalla.

.system c:/SQLITE/parturientas/parturientas.csv
游댳 Descripci칩n: Abre el archivo CSV con el programa predeterminado (como Excel) 
   desde la terminal.
游댳 Requisito: El sistema debe tener Excel o alg칰n programa asociado a .csv.
--------------------------------------------------------------------------------
---------
EJEMPLO 2: EXPORTAR TO JSON
---------

sqlite> .mode json
sqlite> .output musica.json
sqlite> select * from Consulta;

---------
EJEMPLO 3: EXPORTAR TO INSERT
---------

sqlite> .mode insert
sqlite> select * from Consulta;

---------
EJEMPLO 4: EXPORTAR TO HTML
---------

sqlite> .headers on
sqlite> .mode html
sqlite> .once c:/SQLITE/parturientas/parturientas.html
sqlite> select * from Consulta;

****************
***   0006   ***
****************

- CUANTOS MEDICOS HAY

SELECT DISTINCT nombreMedico FROM Consulta;
SELECT COUNT(DISTINCT nombreMedico) AS Cantidad FROM Consulta;

- CONTAR EL N칔MERO DE CONSULTAS REALIZADAS POR CADA MEDICO.

SELECT nombreMedico, COUNT(*) 
FROM Consulta
GROUP BY nombreMedico
ORDER BY nombreMedico;

SELECT nombreMedico, COUNT(*) AS Cantidad 
FROM Consulta
GROUP BY nombreMedico
ORDER BY Cantidad DESC;

- CONTAR EL NUMERO DE CONSULTAS POR CADA A칌O.

SELECT strftime('%Y',fecha), COUNT(*) AS Cantidad
FROM Consulta
GROUP BY strftime('%Y',fecha);

- MOSTRAR EL A칌O CON EL MAYOR NUMERO DE CONSULTAS

SELECT strftime('%Y',fecha) AS A침o, COUNT(*) AS Cantidad
FROM Consulta
GROUP BY strftime('%Y',fecha)
ORDER BY Cantidad DESC
LIMIT 1;

- MOSTRAR EL MEDICO CON EL MENOR NUMERO DE CONSULTAS

SELECT nombreMedico, COUNT(*) AS Cantidad
FROM Consulta
GROUP BY nombreMedico
ORDER BY nombreMedico
LIMIT 1;

- CUANTAS CONSULTAS POR INDUCCION Y URGENCIA

SELECT COUNT(*) AS CantidadConsultas
FROM Consulta
WHERE deinpr = 'INDUCCION' AND procedencia = 'URGENCIAS';

- MOSTRAR LOS DISTINTOS TIPOS DE deinpr

SELECT DISTINCT deinpr
FROM Consulta;

- CONTAR EL NUMERO DE CONSULTAS POR CADA TIPO (INDUCCION, CESAREA, LEGRADO)

SELECT deinpr, COUNT(*) AS Cantidad
FROM Consulta
GROUP BY deinpr;

- MOSTRAR LOS MEDICOS CON MAS DE 200 CONSULTAS

SELECT nombreMedico, COUNT(*) AS Cantidad
FROM Consulta
GROUP BY nombreMedico
HAVING Cantidad > 200
ORDER BY nombreMedico;

- MOSTRAR EL MES CON EL MAYOR NUMERO DE PARTOS POR INDUCCION DEL 2015

SELECT strftime('%m',fecha) AS Mes, COUNT(*) AS Cantidad
FROM Consulta
WHERE strftime('%Y',fecha) = '2015' AND deinpr = 'INDUCCION'
GROUP BY strftime('%m',fecha)
ORDER BY strftime('%m',fecha) DESC
LIMIT 1;

- MOSTRAR EL MES CON EL MAYOR N칔MERO DE PARTOS POR CADA A칌O

SELECT A침o, Cantidad 
FROM (
SELECT strftime('%Y',fecha) AS A침o, COUNT(*) AS Cantidad
FROM Consulta
GROUP BY strftime('%Y',fecha), strftime('%m',fecha) 
Limit 1) AS nose;


TE DOY MI BASE DE DATOS EN SQLITE:

CREATE TABLE Consulta (
  numeroConsulta TEXT(10) NOT NULL,
  fecha          TEXT     NOT NULL,
  nombreMedico   TEXT(50) NOT NULL,
  deinpr         TEXT(20) NOT NULL,
  procedencia    TEXT(20) NOT NULL,
                 PRIMARY KEY (numeroConsulta)
);

QUIERO QUE ME RESUELVAS LA SIGUIENTE CONSULTA:

MOSTRAR EL MES CON EL MAYOR N칔MERO DE PARTOS POR CADA A칌O

SELECT 
    strftime('%Y', fecha) AS a침o,
    strftime('%m', fecha) AS mes,
    COUNT(*) AS cantidad_partos
FROM Consulta
GROUP BY a침o, mes
ORDER BY a침o, cantidad_partos DESC;

- (1) CAMBIOS

SELECT 
(SELECT 
    strftime('%Y', fecha) AS a침o,
    strftime('%m', fecha) AS mes,
    COUNT(*) AS cantidad_partos
FROM Consulta
GROUP BY a침o, mes
ORDER BY a침o, cantidad_partos DESC);


















